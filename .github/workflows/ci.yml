name: ci
permissions:
  contents: read
on:
  pull_request:
  push:
  merge_group:
jobs:
  rustfmt:
    runs-on: ubuntu-20.04

    steps:
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-20.04

    steps:
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - run: cargo clippy --all-features --all-targets

  deny:
    runs-on: ubuntu-20.04

    steps:
      - uses: dtolnay/rust-toolchain@stable

      - uses: taiki-e/install-action@cargo-deny

      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - run: cargo deny check

  # Verify that documentation builds.
  rustdoc:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        rust_channel:
          - stable
          - beta
          - nightly

    steps:
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust_channel }}

      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - run: |
          cargo doc --all-features

  package:
    runs-on: ubuntu-20.04

    steps:
      - uses: dtolnay/rust-toolchain@stable

      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - run: cargo package


  test:
    runs-on: ${{ matrix.host_os }}

    strategy:
      matrix:
        features:
          - # Default
          - --features=alloc
          - --all-features
          - --no-default-features

        mode:
          - # debug
          - --release

        rust_channel:
          - stable
          - nightly
          - beta

        exclude:
          - features: # Default
          - features: --features=alloc
          - features: --no-default-features
          - features: --all-features
            mode: --release
          - features: --all-features
            mode: # debug
            rust_channel: nightly
          - features: --all-features
            mode: # debug
            rust_channel: beta

        include:
          - features: # Default
            mode: # debug
            rust_channel: stable
            host_os: ubuntu-20.04

          - features: --features=alloc
            mode: # debug
            rust_channel: stable
            host_os: ubuntu-20.04

          - features: --no-default-features
            mode: # debug
            rust_channel: stable
            host_os: ubuntu-20.04

          - features: --all-features
            mode: --release
            rust_channel: stable
            host_os: ubuntu-20.04

          - features: --all-features
            mode: # debug
            rust_channel: nightly
            host_os: ubuntu-20.04

          - features: --all-features
            mode: # debug
            rust_channel: beta
            host_os: ubuntu-20.04

          - features: --all-features
            mode: # debug
            rust_channel: stable
            host_os: macos-latest

          - features: --all-features
            mode: # debug
            rust_channel: stable
            host_os: windows-latest

          - features: --all-features
            mode: # debug
            rust_channel: stable
            host_os: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust_channel }}

      - run: |
          cargo test -vv ${{ matrix.features }} ${{ matrix.mode }}
        env:
          RUSTFLAGS: "-D warnings"

  msrv:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.57.0
      - run: cargo check --lib --all-features

  cross:
    name: Check cross compilation targets
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - uses: dtolnay/rust-toolchain@stable

      - uses: taiki-e/install-action@cross

      - run: cross build --target i686-unknown-linux-gnu

  coverage:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - uses: taiki-e/install-action@cargo-llvm-cov

      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: llvm-tools

      - run: cargo llvm-cov --all-features --lcov --output-path ./lcov.info

      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_UPLOAD_TOKEN }}
          files: ./lcov.info
          fail_ci_if_error: true
          verbose: true
